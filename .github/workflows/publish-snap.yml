name: Publish Snap

on:
  push:
    branches: [master, beta, nightly]
    tags: [v*]

jobs:
  build-snap:
    name: Build Snap Package (${{ matrix.architecture }})
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    strategy:
      fail-fast: false
      matrix:
        architecture:
          - i386
          - amd64
          - arm64
          - armhf
          - ppc64el
          #- s390x  # broken at the moment
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3.0.2

      - name: Prepare
        id: prepare
        run: |
          git fetch --prune --unshallow --tags
          if [[ $GITHUB_REF == refs/tags/*-beta || $GITHUB_REF == refs/heads/beta ]]; then
            echo ::set-output name=RELEASE::beta
          elif [[ $GITHUB_REF == refs/tags/* || $GITHUB_REF == refs/heads/master ]]; then
            echo ::set-output name=RELEASE::stable
          else
            echo ::set-output name=RELEASE::edge
          fi

      - name: Set Up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          image: tonistiigi/binfmt@sha256:df15403e06a03c2f461c1f7938b171fda34a5849eb63a70e2a2109ed5a778bde

      - name: Build Snap Package
        uses: diddlesnaps/snapcraft-multiarch-action@v1
        id: build
        with:
          architecture: ${{ matrix.architecture }}

      - name: Upload Snap Package
        uses: actions/upload-artifact@v3
        with:
          name: Tautulli-snap-package-${{ matrix.architecture }}
          path: ${{ steps.build.outputs.snap }}

      - name: Review Snap Package
        uses: diddlesnaps/snapcraft-review-tools-action@v1
        with:
          snap: ${{ steps.build.outputs.snap }}

      - name: Publish Snap Package
        uses: snapcore/action-publish@v1
        if: startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/nightly'
        with:
          store_login: ${{ secrets.SNAP_LOGIN }}
          snap: ${{ steps.build.outputs.snap }}
          release: ${{ steps.prepare.outputs.RELEASE }}

  discord:
    name: Discord Notification
    needs: build-snap
    if: always() && !contains(github.event.head_commit.message, '[skip ci]')
    runs-on: ubuntu-latest
    steps:
      - name: Get Build Job Status
        uses: technote-space/workflow-conclusion-action@v3.0

      - name: Combine Job Status
        id: status
        run: |
          failures=(neutral, skipped, timed_out, action_required)
          if [[ ${array[@]} =~ $WORKFLOW_CONCLUSION ]]; then
            echo ::set-output name=status::failure
          else
            echo ::set-output name=status::$WORKFLOW_CONCLUSION
          fi

      - name: Post Status to Discord
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ steps.status.outputs.status }}
          title: ${{ github.workflow }}
          nofail: true
