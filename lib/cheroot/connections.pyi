from typing import Any

def prevent_socket_inheritance(sock) -> None: ...

class _ThreadsafeSelector:
    def __init__(self) -> None: ...
    def __len__(self): ...
    @property
    def connections(self) -> None: ...
    def register(self, fileobj, events, data: Any | None = ...): ...
    def unregister(self, fileobj): ...
    def select(self, timeout: Any | None = ...): ...
    def close(self) -> None: ...

class ConnectionManager:
    server: Any
    def __init__(self, server) -> None: ...
    def put(self, conn) -> None: ...
    def stop(self) -> None: ...
    def run(self, expiration_interval) -> None: ...
    def close(self) -> None: ...
    @property
    def can_add_keepalive_connection(self): ...
